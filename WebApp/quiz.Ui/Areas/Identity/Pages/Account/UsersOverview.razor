@page "/Identity/Account/UsersOverview"

@attribute [Authorize(Roles = "Администраторы")]

@using quiz.Ui.Components
@using quiz.ModelBusiness
@using quiz.Ui.Pages.Admin

<PageTitle>Пользователи</PageTitle>

<LayoutView Layout="@typeof(AdminLayout)">
    <h3>Пользователи</h3>

    <div class="card border-primary mt-2 mb-3">
        @* Заголовок карточки *@
        <div class="card-header h5">Список пользователей</div>
        @* Тело карточки *@
        <div class="card-body">
            <div class="card-text">
                @* Если данные в контрол ещё не загружены полностью, то *@
                @if (!IsLoaded)
                {
                    @* Отображение пользователю надписи "Загрузка". *@
                    <div style="height: 100px;">
                        <DxLoadingPanel Visible="true"
                                        Text="Загрузка..."
                                        ApplyBackgroundShading="false"
                                        IndicatorAnimationType="WaitIndicatorAnimationType.Spin">
                        </DxLoadingPanel>
                    </div>
                }
                else
                {
                    @*<div style="height:250px; overflow-y:scroll">*@
                    @* Формирование таблицы со списком объектов. *@
                    <table class="table table-sm table-responsive-lg table-bordered text-center">
                        @if (Objects != null && Objects.Count() >= 7)
                        {
                            <caption>Всего записей: @Objects.Count()</caption>
                        }

                        <thead>
                        <tr>
                            <th class="align-middle">Логин</th>
                            <th class="align-middle">Email</th>
                            <th class="align-middle">Дата создания</th>
                            <th class="align-middle">Роли</th>
                        </tr>
                        </thead>
                        <tbody>
                            @* Если при взаимодействии с WebAPI были произошли ошибки, то *@
                            @if (HasWebApiErrors)
                            {
                                @* Информация о проблемах взаимодействия с WebAPI *@
                                <div class="alert alert-danger mt-2">@WebApiErrorsDescription</div>
                            }
                            else
                            {
                                @* Если нет данных для отображения, то *@
                                @if (Objects == null || !Objects.Any())
                                {
                                    // Отображение пользователю надписи "Нет данных".
                                    <p class="align-middle"><em>Нет данных</em></p>
                                }
                                else
                                {
                                    <Virtualize Context="currentObject" Items="@Objects.ToList()" TItem="UserModel">
                                        <ItemContent>
                                            <tr class="@GetRowHtmlClass(currentObject.Id)" @onclick="() => SelectRowAsync(currentObject.Id)">
                                                <td class="@currentObject.UserHtmlClass">@currentObject.Login</td>
                                                <td class="@currentObject.UserHtmlClass">@currentObject.Email</td>
                                                <td class="@currentObject.UserHtmlClass">@currentObject.CreatedAt</td>
                                                <td class="@currentObject.UserHtmlClass">
                                                    @* Отображение списка ролей, в которые входит пользователь *@
                                                    <div class="text-wrap">
                                                        @GetUsersRolesStringById(currentObject.Roles)
                                                   </div>
                                                </td>
                                            </tr>
                                        </ItemContent>
                                        <Placeholder>
                                            @* Отображение пользователю надписи "Загрузка". *@
                                            <div style="height: 100px;">
                                                <DxLoadingPanel Visible="true"
                                                                Text="Загрузка..."
                                                                ApplyBackgroundShading="false"
                                                                IndicatorAnimationType="WaitIndicatorAnimationType.Spin">
                                                </DxLoadingPanel>
                                            </div>
                                        </Placeholder>
                                    </Virtualize>
                                }
                            }
                        </tbody>
                    </table>
                    @*</div>*@

                    <div class="row">
                        @* Рамка отступов вокруг кнопок управления *@
                        <div class="col-lg d-lg-flex align-content-stretch mx-1 mt-1">
                            <button type="button" @onclick="UserAdd" class="btn btn-outline-primary text-center col-auto m-1">Добавить</button>
                            <button type="button" @onclick="() => UserEdit(SelectedElement?.Id ?? Guid.Empty)" class="btn btn-outline-primary text-center m-1" disabled="@(SelectedElement == null)">Редактировать</button>
                            <button type="button" @onclick="ObjectDeleteAsync" class="btn btn-outline-primary text-center m-1" disabled="@(IsDeleteButtonDisabled || SelectedElement == null)">Удалить</button>
                        </div>
                    </div>

                    // Подключение диалоговых окон - popup-окно подтверждения удаления.
                    <DialogDelete @ref="ObjectDeleteDialog" DeletedSuccessfullyEventCallback="@DeleteDialogUser_OnDeletedSuccessfully" ObjectDataService="@ObjectDataService" ObjectToDeleteId="@SelectedElement?.Id"></DialogDelete>
                }
            </div>
        </div>
    </div>
</LayoutView>
