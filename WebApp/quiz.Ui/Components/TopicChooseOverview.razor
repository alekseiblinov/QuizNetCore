@page "/topicchooseoverview"

@attribute [Authorize]

@using quiz.Ui.Components
@using quiz.ModelBusiness

@* Если данные в контрол ещё не загружены полностью, то *@
@if (!IsLoaded)
{
    @* Отображение пользователю надписи "Загрузка". *@
    <DxLoadingPanel Visible="true"
                    Text="Загрузка..."
                    ApplyBackgroundShading="false"
                    IndicatorAnimationType="WaitIndicatorAnimationType.Spin">
    </DxLoadingPanel>
}
else
{
    @* Если нет данных для отображения, то *@
    @if (!TopicsList.Any())
    {
        // Отображение пользователю надписи "Нет данных".
        <p class="align-middle"><em>Нет данных</em></p>
    }
    else
    {
        <EditForm EditContext="@CurrentEditContext">
            <DataAnnotationsValidator />

            @* Вывод списка Тем. *@
            @* Вариант реализации с помощью компонента DxRadio *@
@*             <div role="radiogroup">
                @foreach (TopicModel currentTopic in TopicsList.OrderBy(i => i.OrderNumber))
                {
                    <div class="row" @key=@currentTopic.Id>
                        <DxRadio GroupName="topics-radio-group"
                                 @bind-GroupValue="@SelectedTopicId"
                                 Value="@currentTopic.Id">
                            @currentTopic.Name
                        </DxRadio>
                    </div>
                }
            </div> *@
            @* Вариант реализации с помощью компонента DxRadioGroup *@
            <DxRadioGroup Items="TopicsList.OrderBy(i => i.OrderNumber)"
                          @bind-Value="@SelectedTopicId"
                          ValueFieldName="@nameof(TopicModel.Id)"
                          TextFieldName="@nameof(TopicModel.Name)"
                          ItemLabelPosition="LabelPosition.Right"
                          ItemAlignment="CheckBoxContentAlignment.Default"
                          role="radiogroup">
            </DxRadioGroup>

            @* Если зафиксированы ошибки, то *@
            @if (HasErrors)
            {
                // Вывод текста сообщения об ошибке.
                <div class="alert alert-danger mt-2">@ResultDescription</div>
            }
        </EditForm>
    }

    @* Кнопки управления *@
    <div class="row">
        @* Рамка отступов вокруг кнопок управления *@
        <div class="col d-flex align-content-stretch mx-1 mt-2">
            <DxButton Click="OnSubmitClick" SubmitFormOnClick="true" RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="ButtonRenderStyleMode.Contained" class="m-1 ms-auto" style="width: 210px" disabled="@(!HasChanges)" Context="stubContext">Продолжить</DxButton>
        </div>
    </div>
}
