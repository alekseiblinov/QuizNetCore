@page "/quizoverview"
@page "/quizoverview/{TopicId:guid}"

@attribute [Authorize]

@using quiz.Ui.Components
@using quiz.ModelBusiness

@* Если данные в контрол ещё не загружены полностью, то *@
@if (!IsLoaded)
{
    @* Отображение пользователю надписи "Загрузка". *@
    <DxLoadingPanel Visible="true"
                    Text="Загрузка..."
                    ApplyBackgroundShading="false"
                    IndicatorAnimationType="WaitIndicatorAnimationType.Spin">
    </DxLoadingPanel>
}
else
{
    @* Если нет данных для отображения, то *@
    @if (!QuestionsForQuiz.Any())
    {
        // Отображение пользователю надписи "Нет данных".
        <p class="align-middle"><em>Нет данных</em></p>
    }
    else
    {
        @* Вывод списка вопросов. *@
        @foreach (QuestionModel currentQuestion in QuestionsForQuiz.OrderBy(i => i.CreatedAt))
        {
            <fieldset id=@($"Question_{currentQuestion.Id}") class="row my-3" @key=@currentQuestion.Id>
                <div class="col">
                    @* Вывод текста вопроса *@
                    <label class="form-check-label">@currentQuestion.QuestionText</label>

                    @* Вывод списка ответов на вопрос. *@
                    <div class="row" @key=@($"{currentQuestion.Id}_option01")>
                        <DxRadio 
                                GroupName=@($"Question_{currentQuestion.Id}")
                                Value="@currentQuestion.Option01"
                                GroupValueChanged="@((string newValue) => { currentQuestion.OptionIsSelected01 = newValue == currentQuestion.Option01; HasChanges=true;} )">
                            @currentQuestion.Option01
                        </DxRadio>
                    </div>
                    
                    <div class="row" @key=@($"{currentQuestion.Id}_option02")>
                        <DxRadio 
                            GroupName=@($"Question_{currentQuestion.Id}")
                            Value="@currentQuestion.Option02"
                            GroupValueChanged="@((string newValue) => { currentQuestion.OptionIsSelected02 = newValue == currentQuestion.Option02; HasChanges=true;} )">
                            @currentQuestion.Option02
                        </DxRadio>
                    </div>
                    
                    <div class="row" @key=@($"{currentQuestion.Id}_option03")>
                        <DxRadio 
                            GroupName=@($"Question_{currentQuestion.Id}")
                            Value="@currentQuestion.Option03"
                            GroupValueChanged="@((string newValue) => { currentQuestion.OptionIsSelected03 = newValue == currentQuestion.Option03; HasChanges=true;} )">
                            @currentQuestion.Option03
                        </DxRadio>
                    </div>
                    
                    <div class="row" @key=@($"{currentQuestion.Id}_option04")>
                        <DxRadio 
                            GroupName=@($"Question_{currentQuestion.Id}")
                            Value="@currentQuestion.Option04"
                            GroupValueChanged="@((string newValue) => { currentQuestion.OptionIsSelected04 = newValue == currentQuestion.Option04; HasChanges=true;} )">
                            @currentQuestion.Option04
                        </DxRadio>
                    </div>
                </div>
            </fieldset>
        }

        @* Если зафиксированы ошибки, то *@
        @if (HasErrors)
        {
            // Вывод текста сообщения об ошибке.
            <div class="alert alert-danger mt-2">@ResultDescription</div>
        }
    }

    @* Кнопки управления *@
    <div class="row">
        @* Рамка отступов вокруг кнопок управления *@
        <div class="col d-flex align-content-stretch mx-1 mt-2">
            <DxButton Click="NavigateToTopicChoosePage" RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="ButtonRenderStyleMode.Outline" class="m-1 ms-auto" style="width: 210px">К выбору темы</DxButton>
            <DxButton Click="OnSubmitClick" RenderStyle="ButtonRenderStyle.Primary" RenderStyleMode="ButtonRenderStyleMode.Contained" class="m-1" style="width: 210px" disabled="@(!HasChanges)">Отправить</DxButton>
        </div>
    </div>
}

